# This is a basic workflow to help you get started with Actions

name: Get garmin apps downloads count and replace readme, then publish

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  schedule:
    - cron: '1 0 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Remove the old README.md
        run: |
          rm ./README.md
      
      - name: Request Garmin pages
        id: requestGarminIntl
        # You may pin to the exact commit or the version.
        # uses: fjogeleit/http-request-action@0929a0c636cc8dc6ba7715f5b3d90b0655ded3d7
        uses: fjogeleit/http-request-action@v1.8.0
        with:
          # Request URL
          url: 'https://apps.garmin.com/en-US/apps/c6168ee2-aa5b-42d3-964d-7a891fb8fc12'
          # Request Method
          method: 'GET'
          # Content Type
          contentType: 'html'
          # Request Timeout in Sec
          timeout: 5000
      - name: Actions Ecosystem Action Regex Match
        id: regexMatch
        # You may pin to the exact commit or the version.
        # uses: actions-ecosystem/action-regex-match@9e6c4fb3d5e898f505be7a1fb6e7b0a278f6665b
        uses: actions-ecosystem/action-regex-match@v2.0.2
        with:
          # A text as the target for inputs.regex.
          text: ${{ steps.requestGarminIntl.outputs.response }}
          # A regex for inputs.text. Supports capturing groups.
          regex: '[^><]+(?<=\d+)(?=<\/span>)'
          # Flags for inputs.regex. e.g.) 'g', 'gm'
          flags: 'gm'
      - name: Set JSON Field
        # You may pin to the exact commit or the version.
        # uses: jossef/action-set-json-field@6e6d7e639f24b3955ef682815317b5613ac6ca12
        uses: jossef/action-set-json-field@v1
        with:
          # file name/path to edit. e.g 'package.json'
          file: ./readme_fields.json
          # field to edit. can be nested fields. e.g 'version' or 'metadata.scripts.build'
          field: ciq_download_intl
          # value to set. string. e.g. 'v1.2.3'
          value: ${{ steps.regex-match.outputs.group1 }}
      - name: Readme Replacer - Readme-Workflows
        if: ${{ steps.regex-match.outputs.match != '' }}
        # You may pin to the exact commit or the version.
        # uses: Readme-Workflows/readme-replacer@476f6f7ca5f3a0e7d3a55712d70227845ea3c3b6
        uses: Readme-Workflows/readme-replacer@v1.0.1
        with:
          # Your GitHub username
          GH_USERNAME: ${{ github.repository_owner }}
          # Path to template file
          TEMPLATE_FILE: ./README_TEMPLATE.md
          # Path to commit file
          COMMIT_FILE: ./README.md
          # Path to custom replacer file (JSON). You can select if you want to use eval or not!
          CUSTOM_REPLACER_FILE: ./readme_fields.json
          # Format of the date/time (if date replacer used)
          COMMIT_MESSAGE: 'update download count. It is an automatic commit'
          # Email used for committing changes
          # Name used for committing changes
          COMMIT_NAME: 'replace bot'
