# This is a basic workflow to help you get started with Actions

name: Get Garmin Downloads

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  schedule:
    - cron: '1 0 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Request Garmin pages
        id: requestGarminIntl
        # You may pin to the exact commit or the version.
        # uses: fjogeleit/http-request-action@0929a0c636cc8dc6ba7715f5b3d90b0655ded3d7
        uses: fjogeleit/http-request-action@v1.8.0
        with:
          # Request URL
          url: 'https://apps.garmin.com/en-US/apps/c6168ee2-aa5b-42d3-964d-7a891fb8fc12'
          # Request Method
          method: 'GET'
          # Content Type
          contentType: 'html'
          # Request Timeout in Sec
          timeout: 5000
      - name: Use Regex to match the download times
        id: regexMatch
        # You may pin to the exact commit or the version.
        # uses: actions-ecosystem/action-regex-match@9e6c4fb3d5e898f505be7a1fb6e7b0a278f6665b
        uses: actions-ecosystem/action-regex-match@v2.0.2
        with:
          # A text as the target for inputs.regex.
          text: ${{ steps.requestGarminIntl.outputs.response }}
          # A regex for inputs.text. Supports capturing groups.
          regex: '[^><]+(?<=\d+)(?=<\/span>)'
          # Flags for inputs.regex. e.g.) 'g', 'gm'
          flags: 'gm'
      - name: Output the Downloads count
        run: |
          echo download is ${{ steps.regex-match.outputs.group1 }}
          
      - name: Remove the old README.md and Replace the placeholder in the README_TEMPLATE.md
        if: ${{ steps.regex-match.outputs.group1 != '' }}
        run: |
          rm ./README.md 
          cp ./README_TEMPLATE.md ./README.md
          sed -i -e 's/ciq_download_intl/${{ steps.regex-match.outputs.group1 }}/g' ./README.md

      - name: Make a Commit and Push
        # You may pin to the exact commit or the version.
        # uses: github-actions-x/commit@5cf7985b07155682f82d02b6c2188d90cebeb0c8
        uses: github-actions-x/commit@v2.8
        with:
          # Github Token with commit access
          github-token: ${{ secrets.G_T }}
          # Override branch to push to
          push-branch: main
          # Specify commit message
          commit-message: 'update download count. It is an automatic commit'
          # Specific files to add.
          files: .
          # Committer email. Default is ${name}@users.noreply.github.com
          email: 'chuanyi@protonmail.com'
          # Committer name. Default is name of the person or app that initiated the workflow.
          name: 'github actions'
